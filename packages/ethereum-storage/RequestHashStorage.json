{
  "contractName": "RequestHashStorage",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rateFeesNumerator",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "threshold",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestBurnerContract",
          "type": "address"
        }
      ],
      "name": "setRequestBurnerContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rateFeesDenominator",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_dataSize",
          "type": "uint256"
        }
      ],
      "name": "getFeesAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_threshold",
          "type": "uint256"
        }
      ],
      "name": "setMinimumFeeThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_minimumFee",
          "type": "uint256"
        },
        {
          "name": "_rateFeesNumerator",
          "type": "uint256"
        },
        {
          "name": "_rateFeesDenominator",
          "type": "uint256"
        }
      ],
      "name": "setFeeParameters",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "requestBurnerContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_addressBurner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "hash",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "size",
          "type": "uint256"
        }
      ],
      "name": "NewHash",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "minimumFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "rateFeesNumerator",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "rateFeesDenominator",
          "type": "uint256"
        }
      ],
      "name": "UpdatedFeeParameters",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "UpdatedMinimumFeeThreshold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "burnerAddress",
          "type": "address"
        }
      ],
      "name": "UpdatedBurnerContract",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hash",
          "type": "string"
        },
        {
          "name": "_size",
          "type": "uint256"
        }
      ],
      "name": "submitHash",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051602080610bc38339810180604052810190808051906020019092919050505080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610a81806101426000396000f3006080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631a7626e7146100d5578063263f6a421461010057806342cde4e81461012b578063524eb29c14610156578063715018a61461019957806375c268f3146101b057806388ff5b58146101db5780638da5cb5b146102135780638f32d59b1461026a5780638f5b87e114610299578063b71cb02b146102da578063cb2537cb14610307578063e40e845714610348578063f2fde38b1461039f575b600080fd5b3480156100e157600080fd5b506100ea6103e2565b6040518082815260200191505060405180910390f35b34801561010c57600080fd5b506101156103e8565b6040518082815260200191505060405180910390f35b34801561013757600080fd5b506101406103ee565b6040518082815260200191505060405180910390f35b34801561016257600080fd5b50610197600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103f4565b005b3480156101a557600080fd5b506101ae6104d0565b005b3480156101bc57600080fd5b506101c56105a2565b6040518082815260200191505060405180910390f35b610211600480360381019080803590602001908201803590602001919091929391929390803590602001909291905050506105a8565b005b34801561021f57600080fd5b50610228610625565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027657600080fd5b5061027f61064e565b604051808215151515815260200191505060405180910390f35b3480156102a557600080fd5b506102c4600480360381019080803590602001909291905050506106a5565b6040518082815260200191505060405180910390f35b3480156102e657600080fd5b5061030560048036038101908080359060200190929190505050610730565b005b34801561031357600080fd5b50610346600480360381019080803590602001909291908035906020019092919080359060200190929190505050610786565b005b34801561035457600080fd5b5061035d610800565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ab57600080fd5b506103e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610826565b005b60015481565b60025481565b60045481565b6103fc61064e565b151561040757600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2c87fdcc342ca09b09df1fb16a153b7ceb0a4b56ad223f12c8fbff63f98ccd8600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6104d861064e565b15156104e357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b346105b2826106a5565b1415156105be57600080fd5b6105c734610845565b7ff4e7e38d1b37f18f0e61ba25936f47da48fd1f0b49da48db21346311fd0f37c483838360405180806020018381526020018281038252858582818152602001925080828437820191505094505050505060405180910390a1505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000806000600454841115156106bf576001549250610729565b6106d4600454856108b190919063ffffffff16565b91506106eb600254836108d290919063ffffffff16565b905060006003541415156107115761070e6003548261091090919063ffffffff16565b90505b6107266001548261093a90919063ffffffff16565b92505b5050919050565b61073861064e565b151561074357600080fd5b806004819055507fc81dfee30d8860880246408e565f538edb9493d9cf7888c0cd54ad9a60f58b9c6004546040518082815260200191505060405180910390a150565b61078e61064e565b151561079957600080fd5b8260018190555081600281905550806003819055507f741cafcfc8058975fab7ed6bdaf402b47dca8aa9826990c454c058a6f9b06d1660015460025460035460405180848152602001838152602001828152602001935050505060405180910390a1505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61082e61064e565b151561083957600080fd5b6108428161095b565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108ad573d6000803e3d6000fd5b5050565b6000808383111515156108c357600080fd5b82840390508091505092915050565b60008060008414156108e75760009150610909565b82840290508284828115156108f857fe5b0414151561090557600080fd5b8091505b5092915050565b60008060008311151561092257600080fd5b828481151561092d57fe5b0490508091505092915050565b600080828401905083811015151561095157600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561099757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820e7d0ae35d5f027dbd5a75a90bb7364c770de52d8b12e3583541a7a39df3af5bc0029",
  "deployedBytecode": "0x6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631a7626e7146100d5578063263f6a421461010057806342cde4e81461012b578063524eb29c14610156578063715018a61461019957806375c268f3146101b057806388ff5b58146101db5780638da5cb5b146102135780638f32d59b1461026a5780638f5b87e114610299578063b71cb02b146102da578063cb2537cb14610307578063e40e845714610348578063f2fde38b1461039f575b600080fd5b3480156100e157600080fd5b506100ea6103e2565b6040518082815260200191505060405180910390f35b34801561010c57600080fd5b506101156103e8565b6040518082815260200191505060405180910390f35b34801561013757600080fd5b506101406103ee565b6040518082815260200191505060405180910390f35b34801561016257600080fd5b50610197600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103f4565b005b3480156101a557600080fd5b506101ae6104d0565b005b3480156101bc57600080fd5b506101c56105a2565b6040518082815260200191505060405180910390f35b610211600480360381019080803590602001908201803590602001919091929391929390803590602001909291905050506105a8565b005b34801561021f57600080fd5b50610228610625565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027657600080fd5b5061027f61064e565b604051808215151515815260200191505060405180910390f35b3480156102a557600080fd5b506102c4600480360381019080803590602001909291905050506106a5565b6040518082815260200191505060405180910390f35b3480156102e657600080fd5b5061030560048036038101908080359060200190929190505050610730565b005b34801561031357600080fd5b50610346600480360381019080803590602001909291908035906020019092919080359060200190929190505050610786565b005b34801561035457600080fd5b5061035d610800565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103ab57600080fd5b506103e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610826565b005b60015481565b60025481565b60045481565b6103fc61064e565b151561040757600080fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2c87fdcc342ca09b09df1fb16a153b7ceb0a4b56ad223f12c8fbff63f98ccd8600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6104d861064e565b15156104e357600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60035481565b346105b2826106a5565b1415156105be57600080fd5b6105c734610845565b7ff4e7e38d1b37f18f0e61ba25936f47da48fd1f0b49da48db21346311fd0f37c483838360405180806020018381526020018281038252858582818152602001925080828437820191505094505050505060405180910390a1505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000806000600454841115156106bf576001549250610729565b6106d4600454856108b190919063ffffffff16565b91506106eb600254836108d290919063ffffffff16565b905060006003541415156107115761070e6003548261091090919063ffffffff16565b90505b6107266001548261093a90919063ffffffff16565b92505b5050919050565b61073861064e565b151561074357600080fd5b806004819055507fc81dfee30d8860880246408e565f538edb9493d9cf7888c0cd54ad9a60f58b9c6004546040518082815260200191505060405180910390a150565b61078e61064e565b151561079957600080fd5b8260018190555081600281905550806003819055507f741cafcfc8058975fab7ed6bdaf402b47dca8aa9826990c454c058a6f9b06d1660015460025460035460405180848152602001838152602001828152602001935050505060405180910390a1505050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61082e61064e565b151561083957600080fd5b6108428161095b565b50565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108ad573d6000803e3d6000fd5b5050565b6000808383111515156108c357600080fd5b82840390508091505092915050565b60008060008414156108e75760009150610909565b82840290508284828115156108f857fe5b0414151561090557600080fd5b8091505b5092915050565b60008060008311151561092257600080fd5b828481151561092d57fe5b0490508091505092915050565b600080828401905083811015151561095157600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561099757600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820e7d0ae35d5f027dbd5a75a90bb7364c770de52d8b12e3583541a7a39df3af5bc0029",
  "sourceMap": "160:874:1:-;;;278:95;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:95:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;339:14;518:10:4;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;1862:22:2;1838:21;;:46;;;;;;;;;;;;;;;;;;1774:115;278:95:1;160:874;;;;;;",
  "deployedSourceMap": "160:874:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:8;;;1099:25:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1099:25:2;;;;;;;;;;;;;;;;;;;;;;;1128:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1128:32:2;;;;;;;;;;;;;;;;;;;;;;;1202:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1202:24:2;;;;;;;;;;;;;;;;;;;;;;;3084:208;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3084:208:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:4;;;;;;1164:34:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1164:34:2;;;;;;;;;;;;;;;;;;;;;;;620:299:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:70:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:4;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:4;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:510:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3465:510:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2746:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2746:162:2;;;;;;;;;;;;;;;;;;;;;;;;;;2231:344;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2231:344:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1285:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;1099:25:2;;;;:::o;1128:32::-;;;;:::o;1202:24::-;;;;:::o;3084:208::-;824:9:4;:7;:9::i;:::-;816:18;;;;;;;;3210:22:2;3186:21;;:46;;;;;;;;;;;;;;;;;;3243:44;3265:21;;;;;;;;;;;3243:44;;;;;;;;;;;;;;;;;;;;;;3084:208;:::o;1273:127:4:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;1164:34:2:-;;;;:::o;620:299:1:-;761:9;737:20;751:5;737:13;:20::i;:::-;:33;729:42;;;;;;;;824:31;845:9;824:20;:31::i;:::-;893:21;901:5;;908;893:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:299;;;:::o;639:70:4:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;926:83::-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;3465:510:2:-;3539:7;3684:21;3740:23;3574:9;;3561;:22;;3557:414;;;3600:10;;3593:17;;;;3557:414;3708:24;3722:9;;3708;:13;;:24;;;;:::i;:::-;3684:48;;3766:36;3784:17;;3766:13;:17;;:36;;;;:::i;:::-;3740:62;;3838:1;3815:19;;:24;;3811:107;;;3869:40;3889:19;;3869:15;:19;;:40;;;;:::i;:::-;3851:58;;3811:107;3933:31;3953:10;;3933:15;:19;;:31;;;;:::i;:::-;3926:38;;3465:510;;;;;;:::o;2746:162::-;824:9:4;:7;:9::i;:::-;816:18;;;;;;;;2845:10:2;2833:9;:22;;;;2866:37;2893:9;;2866:37;;;;;;;;;;;;;;;;;;2746:162;:::o;2231:344::-;824:9:4;:7;:9::i;:::-;816:18;;;;;;;;2384:11:2;2371:10;:24;;;;2421:18;2401:17;:38;;;;2467:20;2445:19;:42;;;;2498:72;2519:10;;2531:17;;2550:19;;2498:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2231:344;;;:::o;1285:36::-;;;;;;;;;;;;;:::o;1561:101:4:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;4110:147:2:-;4213:21;;;;;;;;;;;:30;;:39;4244:7;4213:39;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4213:39:2;4110:147;:::o;1078:131:3:-;1136:7;1172:9;1164:1;1159;:6;;1151:15;;;;;;;;1188:1;1184;:5;1172:17;;1203:1;1196:8;;1078:131;;;;;:::o;204:381::-;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;695:270::-;753:7;846:9;780:1;776;:5;768:14;;;;;;;;862:1;858;:5;;;;;;;;846:17;;959:1;952:8;;695:270;;;;;:::o;1272:131::-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;1796:169:4:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./StorageFeeCollector.sol\";\n\n/**\n * @title RequestHashStorage\n * @notice Contract that stores ipfs hashes with event logs\n */\ncontract RequestHashStorage is StorageFeeCollector {\n\n  /**\n   * @param _addressBurner Burner address address\n   */\n  constructor(address _addressBurner) \n    StorageFeeCollector(_addressBurner)\n    public\n  {\n  }\n\n  // Event for submitted hashes\n  event NewHash(string hash, uint size);\n\n  /**\n   * @notice Submit a new hash to the blockchain.\n   *\n   * @param _hash Hash of the request to be stored\n   * @param _size Size of the request to be stored\n   */\n  function submitHash(string _hash, uint256 _size)\n    external\n    payable\n  {\n    // Check fees are paid\n    require(getFeesAmount(_size) == msg.value);\n\n    // Send fees to burner, throws on failure\n    collectForREQBurning(msg.value);\n\n    // Emit event for log\n    emit NewHash(_hash, _size);\n  }\n\n  // Fallback function returns funds to the sender\n  function() \n    public\n    payable \n  { \n    revert();\n  }\n}\n",
  "sourcePath": "/Users/bertrand/Projets/requestNetwork/requestNetwork/packages/ethereum-storage-smart-contract/contracts/RequestHashStorage.sol",
  "ast": {
    "absolutePath": "/Users/bertrand/Projets/requestNetwork/requestNetwork/packages/ethereum-storage-smart-contract/contracts/RequestHashStorage.sol",
    "exportedSymbols": {
      "RequestHashStorage": [
        111
      ]
    },
    "id": 112,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/bertrand/Projets/requestNetwork/requestNetwork/packages/ethereum-storage-smart-contract/contracts/StorageFeeCollector.sol",
        "file": "./StorageFeeCollector.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 112,
        "sourceUnit": 279,
        "src": "26:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "StorageFeeCollector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 278,
              "src": "191:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageFeeCollector_$278",
                "typeString": "contract StorageFeeCollector"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "191:19:1"
          }
        ],
        "contractDependencies": [
          278,
          515
        ],
        "contractKind": "contract",
        "documentation": "@title RequestHashStorage\n@notice Contract that stores ipfs hashes with event logs",
        "fullyImplemented": true,
        "id": 111,
        "linearizedBaseContracts": [
          111,
          278,
          515
        ],
        "name": "RequestHashStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "368:5:1",
              "statements": []
            },
            "documentation": "@param _addressBurner Burner address address",
            "id": 70,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "_addressBurner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63,
                    "src": "339:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "StorageFeeCollector",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 278,
                  "src": "319:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_StorageFeeCollector_$278_$",
                    "typeString": "type(contract StorageFeeCollector)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "319:35:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_addressBurner",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "290:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "289:24:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:0:1"
            },
            "scope": 111,
            "src": "278:95:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 76,
            "name": "NewHash",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "423:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "indexed": false,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "436:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "422:24:1"
            },
            "src": "409:38:1"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "696:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "_size",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "751:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 84,
                            "name": "getFeesAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "737:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "737:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "761:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "761:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "737:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        533,
                        534
                      ],
                      "referencedDeclaration": 533,
                      "src": "729:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "729:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "845:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "845:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92,
                      "name": "collectForREQBurning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "824:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "824:31:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "901:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "_size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "908:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97,
                      "name": "NewHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "893:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "EmitStatement",
                  "src": "888:26:1"
                }
              ]
            },
            "documentation": "@notice Submit a new hash to the blockchain.\n   * @param _hash Hash of the request to be stored\n@param _size Size of the request to be stored",
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "submitHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "640:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_size",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "654:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "639:29:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:0:1"
            },
            "scope": 111,
            "src": "620:299:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1012:20:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 106,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        535,
                        536
                      ],
                      "referencedDeclaration": 535,
                      "src": "1019:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 110,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:1"
            },
            "scope": 111,
            "src": "974:58:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 112,
        "src": "160:874:1"
      }
    ],
    "src": "0:1035:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/bertrand/Projets/requestNetwork/requestNetwork/packages/ethereum-storage-smart-contract/contracts/RequestHashStorage.sol",
    "exportedSymbols": {
      "RequestHashStorage": [
        111
      ]
    },
    "id": 112,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/Users/bertrand/Projets/requestNetwork/requestNetwork/packages/ethereum-storage-smart-contract/contracts/StorageFeeCollector.sol",
        "file": "./StorageFeeCollector.sol",
        "id": 59,
        "nodeType": "ImportDirective",
        "scope": 112,
        "sourceUnit": 279,
        "src": "26:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 60,
              "name": "StorageFeeCollector",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 278,
              "src": "191:19:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StorageFeeCollector_$278",
                "typeString": "contract StorageFeeCollector"
              }
            },
            "id": 61,
            "nodeType": "InheritanceSpecifier",
            "src": "191:19:1"
          }
        ],
        "contractDependencies": [
          278,
          515
        ],
        "contractKind": "contract",
        "documentation": "@title RequestHashStorage\n@notice Contract that stores ipfs hashes with event logs",
        "fullyImplemented": true,
        "id": 111,
        "linearizedBaseContracts": [
          111,
          278,
          515
        ],
        "name": "RequestHashStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "368:5:1",
              "statements": []
            },
            "documentation": "@param _addressBurner Burner address address",
            "id": 70,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 66,
                    "name": "_addressBurner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 63,
                    "src": "339:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 67,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 65,
                  "name": "StorageFeeCollector",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 278,
                  "src": "319:19:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_StorageFeeCollector_$278_$",
                    "typeString": "type(contract StorageFeeCollector)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "319:35:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "name": "_addressBurner",
                  "nodeType": "VariableDeclaration",
                  "scope": 70,
                  "src": "290:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "289:24:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:0:1"
            },
            "scope": 111,
            "src": "278:95:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 76,
            "name": "NewHash",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "indexed": false,
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "423:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "indexed": false,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "436:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "436:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "422:24:1"
            },
            "src": "409:38:1"
          },
          {
            "body": {
              "id": 102,
              "nodeType": "Block",
              "src": "696:223:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "name": "_size",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "751:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 84,
                            "name": "getFeesAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "737:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 86,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "737:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 530,
                            "src": "761:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 88,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "761:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "737:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 83,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        533,
                        534
                      ],
                      "referencedDeclaration": 533,
                      "src": "729:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "729:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "729:42:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 530,
                          "src": "845:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 94,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "845:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92,
                      "name": "collectForREQBurning",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "824:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "824:31:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 98,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 78,
                        "src": "901:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 99,
                        "name": "_size",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "908:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97,
                      "name": "NewHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "893:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "EmitStatement",
                  "src": "888:26:1"
                }
              ]
            },
            "documentation": "@notice Submit a new hash to the blockchain.\n   * @param _hash Hash of the request to be stored\n@param _size Size of the request to be stored",
            "id": 103,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "submitHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 81,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "640:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80,
                  "name": "_size",
                  "nodeType": "VariableDeclaration",
                  "scope": 103,
                  "src": "654:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "639:29:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "696:0:1"
            },
            "scope": 111,
            "src": "620:299:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1012:20:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 106,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        535,
                        536
                      ],
                      "referencedDeclaration": 535,
                      "src": "1019:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1019:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1019:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 110,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "982:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:0:1"
            },
            "scope": 111,
            "src": "974:58:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 112,
        "src": "160:874:1"
      }
    ],
    "src": "0:1035:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x89e6cb10ee706752f83e19b6c9d74487d0a8dd1e",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542252801078": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542265960834": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542334844189": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542608316988": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542683306385": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542768400708": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542772254435": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542777695869": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542852119303": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1542938170659": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1543197903789": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1543460001014": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1543473546915": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1543545167455": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1543800717831": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1543886936407": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    },
    "1543976716544": {
      "events": {},
      "links": {},
      "address": "0x345ca3e014aaf5dca488057592ee47305d9b3e10",
      "transactionHash": "0x4a6d0a502e418b6ffcb39ed057c8ea860768adfa65a16bc0f89673aa5a142375"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-05T02:25:35.954Z"
}